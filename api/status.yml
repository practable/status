---
swagger: '2.0'
info:
  version: '0.1'
  title: Status
  description: API for getting the status of experiments
  contact:
    email: timothy.d.drysdale@gmail.com
    name: Timothy Drysdale
    url: https://github.com/timdrysdale
host: localhost
basePath: /
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  
  /experiments:
    get:
      description:  Get the status of all experiments
      summary:  Get the status of all experiments
      operationId: statusExperiments
      deprecated: false
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ExperimentReports'
          headers: {}
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalError'
          
  /experiments/events/{name}:
    get:
      description:  Get a list of the health events recorded for an experiment
      summary:  Get the health events for an experiment
      operationId: healthEvents
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: name
        in: path
        type: string
        description: topic_stub of the experiment e.g pend00 (not r-pend00)
        required: true
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/HealthEvents'
          headers: {}
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalError'
          
definitions:

  Error:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
    required:
      - code
      - message
      
  ExperimentReport:
    title: Report on the Status of an experiment
    type: object
    properties:
      available:
        description: is it set as available on the booking system?
        type: boolean
      first_checked:
        type: string
      healthy:
        type: boolean
      health_events:
        description: number of health events recorded
        type: integer
      jump_ok:
        type: boolean
      jump_report:
        $ref: '#/definitions/JumpReport'
      last_checked_jump:
        type: string
      last_checked_streams:
        type: string
      last_found_in_manifest:
        type: string
      resource_name:
        description: name of the resouce in the manifest
        example: r-spin30
        type: string
      stream_ok:
        type: object
        additionalProperties:
          type: boolean
      stream_reports:
        type: object
        additionalProperties:
          $ref: '#/definitions/StreamReport'
      stream_required:
        type: object
        description: defaults to true for required stream, false currently undefined, but kept as a map for consistenct with stream_reports and stream_ok
        additionalProperties:
           type: boolean
      topic_name: 
        description: topic stub in stream names
        example: spin30
        type: string
    required:
      - available
      - first_checked
      - healthy
      - jump_ok
      - last_checked_jump
      - last_checked_streams
      - last_found_in_manifest
      - resource_name
      - stream_ok
      - stream_reports
      - stream_required
      - topic_name
      
  ExperimentReports:
    title: List of experiment reports
    type: array
    items:
      $ref: '#/definitions/ExperimentReport'
      
  HealthEvent:
    title: health event
    description: information on what streams are available when an experiment changes health status
    properties:
      healthy:
        description: is experiment healthy?
        type: boolean
      issues:
        description: list of issues, if any
        type: array
        items:
          description: individual issue
          type: string
      jump_ok:
        description: is the jump connection ok?
        type: boolean
      stream_ok:
        description: which streams are connected, and are they ok? Name of stream in key
        type: object
        additionalProperties:
          type: boolean
      when:
        description: the time and date of the event occurring
        type: string
        
  HealthEvents:
    title: Health events
    description: list of health events
    type: array
    items:
      $ref: '#/definitions/HealthEvent'
      
  JumpReport:
    title: Status of the jump connection for an experiment
    type: object
    properties:
      can_read:
        type: boolean
      can_write:
        type: boolean
      connected:
        description: date and time connection made
        type: string
      expires_at:
        description: expiry date and time in the token used to authenticate the connection
        type: string
      remote_addr:
        description: list of IP addresses for client (typically <client>, <proxy 1>, etc)
        type: string
      scopes:
        type: array
        description: list of scopes supplied in token used to authenticate the connection
        items:
          type: string
      stats:
        $ref: '#/definitions/RxTx'
      topic:
        description: topic_stub for experiment e.g. pend00
        type: string        
      user_agent:
        description: what tool is user using to connect
        type: string
    required:
    - connected
    - expires_at
    - scopes
    - stats
    - topic
    - user_agent
    
  RxTx:
    description: receive and transmit statistics for a connection
    type: object
    properties:
      rx:
        $ref: '#/definitions/Statistics'
      tx:
        $ref: '#/definitions/Statistics'

  Statistics:
    description: connection statistics
    type: object
    properties:
      fps:
        description: messages per second (frames per second if video)
        type: integer
      last:
        description: date and time of the last message sent
        type: string
      never:
        description: true if not messages ever sent on this connection
        type: boolean
      size:
        description: size in bytes of the last message sent
        type: integer        
        
      
  
  StreamReport:
    title: Status of a stream
    type: object
    properties:
      name:
        description: name of the stream, eg. video, data
        type: string
      active:
        description: is the experiment currently actively sending?
        type: boolean
      clients:
        description: number of clients connected (0 if just the experiment)
        type: number
        format: integer
      connected:
        description: is the experiment currently connected to relay?
        type: boolean
      last:
        description: duration since last send by experiment
        type: string
      required:
        description: does the experiment require this stream?
        type: boolean
    required:
    - name
    - active
    - clients
    - connected
    - last
    
responses:
  NotFound:
    description: The specified resource was not found
    schema:
      $ref: '#/definitions/Error'
  Unauthorized:
    description: Unauthorized
    schema:
      $ref: '#/definitions/Error'
  InternalError:
    description: Internal Error
    schema:
      $ref: '#/definitions/Error'
