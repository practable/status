// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/practable/status/internal/serve/models"
)

// HealthEventsOKCode is the HTTP code returned for type HealthEventsOK
const HealthEventsOKCode int = 200

/*HealthEventsOK OK

swagger:response healthEventsOK
*/
type HealthEventsOK struct {

	/*
	  In: Body
	*/
	Payload models.HealthEvents `json:"body,omitempty"`
}

// NewHealthEventsOK creates HealthEventsOK with default headers values
func NewHealthEventsOK() *HealthEventsOK {

	return &HealthEventsOK{}
}

// WithPayload adds the payload to the health events o k response
func (o *HealthEventsOK) WithPayload(payload models.HealthEvents) *HealthEventsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the health events o k response
func (o *HealthEventsOK) SetPayload(payload models.HealthEvents) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HealthEventsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.HealthEvents{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// HealthEventsUnauthorizedCode is the HTTP code returned for type HealthEventsUnauthorized
const HealthEventsUnauthorizedCode int = 401

/*HealthEventsUnauthorized Unauthorized

swagger:response healthEventsUnauthorized
*/
type HealthEventsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewHealthEventsUnauthorized creates HealthEventsUnauthorized with default headers values
func NewHealthEventsUnauthorized() *HealthEventsUnauthorized {

	return &HealthEventsUnauthorized{}
}

// WithPayload adds the payload to the health events unauthorized response
func (o *HealthEventsUnauthorized) WithPayload(payload *models.Error) *HealthEventsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the health events unauthorized response
func (o *HealthEventsUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HealthEventsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HealthEventsNotFoundCode is the HTTP code returned for type HealthEventsNotFound
const HealthEventsNotFoundCode int = 404

/*HealthEventsNotFound The specified resource was not found

swagger:response healthEventsNotFound
*/
type HealthEventsNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewHealthEventsNotFound creates HealthEventsNotFound with default headers values
func NewHealthEventsNotFound() *HealthEventsNotFound {

	return &HealthEventsNotFound{}
}

// WithPayload adds the payload to the health events not found response
func (o *HealthEventsNotFound) WithPayload(payload *models.Error) *HealthEventsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the health events not found response
func (o *HealthEventsNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HealthEventsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HealthEventsInternalServerErrorCode is the HTTP code returned for type HealthEventsInternalServerError
const HealthEventsInternalServerErrorCode int = 500

/*HealthEventsInternalServerError Internal Error

swagger:response healthEventsInternalServerError
*/
type HealthEventsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewHealthEventsInternalServerError creates HealthEventsInternalServerError with default headers values
func NewHealthEventsInternalServerError() *HealthEventsInternalServerError {

	return &HealthEventsInternalServerError{}
}

// WithPayload adds the payload to the health events internal server error response
func (o *HealthEventsInternalServerError) WithPayload(payload *models.Error) *HealthEventsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the health events internal server error response
func (o *HealthEventsInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HealthEventsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
