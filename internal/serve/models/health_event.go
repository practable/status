// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// HealthEvent health event
//
// information on what streams are available when an experiment changes health status
//
// swagger:model HealthEvent
type HealthEvent struct {

	// is experiment healthy?
	Healthy bool `json:"healthy,omitempty"`

	// list of issues, if any
	Issues []string `json:"issues"`

	// is the jump connection ok?
	JumpOk bool `json:"jump_ok,omitempty"`

	// which streams are connected, and are they ok? Name of stream in key
	StreamOk map[string]bool `json:"stream_ok,omitempty"`

	// the time and date of the event occurring
	When string `json:"when,omitempty"`
}

// Validate validates this health event
func (m *HealthEvent) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this health event based on context it is used
func (m *HealthEvent) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *HealthEvent) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HealthEvent) UnmarshalBinary(b []byte) error {
	var res HealthEvent
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
